{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from \"express\";\r\nimport * as dateformat from \"dateformat\";\r\nimport * as dns from \"dns\";\r\nexport async function slackにメッセージ投稿(url: string, メッセージ: string) {\r\n  // https://qiita.com/ik-fib/items/b4a502d173a22b3947a0\r\n  if (url == \"\") {\r\n    return;\r\n  }\r\n  return fetch(url, { method: \"post\", body: JSON.stringify({ text: メッセージ }) });\r\n}\r\nexport async function requestから接続情報を取得(request: express.Request): Promise<{ ipアドレス: string, ホスト: string, UA: string, ヘッダー: string }> {\r\n  const ヘッダー: string = (() => {\r\n    const r = [];\r\n    for (let i = 0; i < request.rawHeaders.length; i += 2) {\r\n      r.push(`${request.rawHeaders[i]}:${request.rawHeaders[i + 1]}`);\r\n    }\r\n    return r.join(\"\\n\");\r\n  })();\r\n\r\n  const ipアドレス = (() => {\r\n    const xRealIp = Object.entries(request.headers).filter(a => a[\"0\"].toLowerCase() == \"X-Real-IP\".toLowerCase()).map(a => a[\"1\"]).join(\"\")\r\n    if (xRealIp) {\r\n      return xRealIp;\r\n    } else {\r\n      return request.ip;\r\n    }\r\n  })();\r\n  const ua = Object.entries(request.headers).filter(a => a[\"0\"].toLowerCase() == \"User-Agent\".toLowerCase()).map(a => a[\"1\"]).join(\"\");\r\n  const ホスト = await ipアドレスからホストを逆引き(ipアドレス);\r\n  return {\r\n    ipアドレス,\r\n    UA: ua,\r\n    ホスト,\r\n    ヘッダー\r\n  };\r\n}\r\nfunction ipアドレスからホストを逆引き(ipアドレス: string): Promise<string> {\r\n  if (ipアドレス.trim() == \"\") {\r\n    return Promise.resolve(\"\");\r\n  }\r\n  return new Promise(resolve => {\r\n    dns.reverse(ipアドレス, (_, domains) => {\r\n      if (domains === undefined || domains.length == 0) {\r\n        resolve(\"\");\r\n      } else {\r\n        resolve(domains[0]);\r\n      }\r\n    });\r\n  });\r\n}\r\nexport function mergeDateformat(マージ対象テキスト: string, 日付フォーマット: string = \"yyyy/mm/dd(ddd)HH:MM:ss.l\", 曜日の言語: \"ja\" | \"en\" = \"en\") {\r\n  if (曜日の言語 == \"en\") {\r\n    dateformat.i18n.dayNames = [\r\n      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\r\n      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\r\n    ];\r\n  } else {\r\n    dateformat.i18n.dayNames = [\r\n      '日', '月', '火', '水', '木', '金', '土',\r\n      '日曜日', '月曜日', '火曜日', '水曜日', '木曜日', '金曜日', '土曜日'\r\n    ];\r\n  }\r\n  const 接頭語 = dateformat(new Date(), 日付フォーマット);\r\n  return マージ対象テキスト.split(\"\\n\").map(a => `${接頭語} ${a}`).join(\"\\n\");\r\n};\r\nexport function getIpv4Address(): string[] {\r\n  const ifaces = require('os').networkInterfaces();\r\n  const result: string[] = [];\r\n  Object.keys(ifaces).forEach((interfaceName) => {\r\n    const data = ifaces[interfaceName];\r\n    data.forEach((interfaceOneData: any) => {\r\n      const address = interfaceOneData.address;\r\n      const family = interfaceOneData.family;\r\n      if (family !== \"IPv4\") {\r\n        return;\r\n      }\r\n      result.push(address);\r\n    });\r\n  });\r\n  return result;\r\n}\r\n"]}